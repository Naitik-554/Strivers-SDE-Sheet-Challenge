// Better Method

Node *findMiddle(Node *head) {
    if(head == NULL) return head;
    Node* front = head;
    int cnt = 0;
    while(front != NULL) {
        cnt++;
        front = front->next;
    }
    int check = cnt;
    cnt = cnt/2;
    front = head;
    while(cnt--) {
        front = front->next;
    } 
    return front;
}

// Optimal Method (Slow Fast)

Node *findMiddle(Node *head) {
    if(head == NULL) return head;
    Node* slow = head;
    Node* fast = head;
    while(fast != NULL && fast->next != NULL) {
        fast = fast->next;
        if(fast->next) fast =  fast->next;
        slow = slow->next;
    }

    return slow;
}

